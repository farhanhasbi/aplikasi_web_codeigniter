<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Paket_model extends CI_Model
{
    var $table = 'paket';
    var $column_order = array('id_paket','nama_paket','id_menu','id_jadwal',null); //set column field database for datatable orderable
    var $column_search = array('id_paket','nama_paket','id_menu','id_jadwal'); //set column field database for datatable searchable 
    var $order = array('nama_paket' => 'asc'); // default order 
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get paket by id_paket
     */
    function get_paket($id_paket)
    {
        return $this->db->get_where('paket',array('id_paket'=>$id_paket))->row_array();
    }
        
    /*
     * Get all paket
     */
    function get_all_paket()
    {
        $this->db->order_by('id_paket', 'desc');
        return $this->db->get('paket')->result_array();
    }
        
    /*
     * function to add new paket
     */
    function add_paket($params)
    {
        $this->db->insert('paket',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update paket
     */
    function update_paket($id_paket,$params)
    {
        $this->db->where('id_paket',$id_paket);
        return $this->db->update('paket',$params);
    }
    
    /*
     * function to delete paket
     */
    function delete_paket($id_paket)
    {
        return $this->db->delete('paket',array('id_paket'=>$id_paket));
    }
     function _get_datatables_query()
    {
         
         $this->db->select('*');
         $this->db->from('paket');
         $this->db->join('menu_paket','menu_paket.id_menu=paket.id_menu', 'left');
         $this->db->join('jadwal_menu','jadwal_menu.id_jadwal=paket.id_jadwal', 'left');
 
        $i = 0;
     
        foreach ($this->column_search as $item) // loop column 
        {
            if($_POST['search']['value']) // if datatable send POST for search
            {
                 
                if($i===0) // first loop
                {
                    $this->db->group_start(); // open bracket. query Where with OR clause better with bracket. because maybe can combine with other WHERE with AND.
                    $this->db->like($item, $_POST['search']['value']);
                }
                else
                {
                    $this->db->or_like($item, $_POST['search']['value']);
                }
 
                if(count($this->column_search) - 1 == $i) //last loop
                    $this->db->group_end(); //close bracket
            }
            $i++;
        }
         
        if(isset($_POST['order'])) // here order processing
        {
            $this->db->order_by($this->column_order[$_POST['order']['0']['column']], $_POST['order']['0']['dir']);
        } 
        else if(isset($this->order))
        {
            $order = $this->order;
            $this->db->order_by(key($order), $order[key($order)]);
        }
    }
 
    function get_datatables()
    {
        $this->_get_datatables_query();
        if($_POST['length'] != -1)
        $this->db->limit($_POST['length'], $_POST['start']);
        $query = $this->db->get();
        return $query->result();
    }
 
    function count_filtered()
    {
        $this->_get_datatables_query();
        $query = $this->db->get();
        return $query->num_rows();
    }
    function count_all()
    {
        $this->db->from($this->table);
        return $this->db->count_all_results();
    }
    public function join_data() {
        $this->_get_datatables_query();
         if($_POST['length'] != -1)
         $this->db->limit($_POST['length'], $_POST['start']);
    
         return $this->db->get()->result();
}

    }

