<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Stok_bahan_makanan_model extends CI_Model{ 
    var $table = 'stok_bahan_makanan';
    var $column_order = array(null, 'nama_bahan','kelompok_bahan','jumlah_bahan',null); //set column field database for datatable orderable
    var $column_search = array('nama_bahan','kelompok_bahan','jumlah_bahan'); //set column field database for datatable searchable 
    var $order = array('id' => 'asc'); // default order 

    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get stok_bahan_makanan by id
     */
    function get_stok_bahan_makanan($id)
    {
        return $this->db->get_where('stok_bahan_makanan',array('id'=>$id))->row_array();
    }
        
    /*
     * Get all stok_bahan_makanan
     */
    function get_all_stok_bahan_makanan()
    {
        $this->db->order_by('id', 'desc');
        return $this->db->get('stok_bahan_makanan')->result_array();
    }
        
    /*
     * function to add new stok_bahan_makanan
     */
    function add_stok_bahan_makanan($params)
    {
        $this->db->insert('stok_bahan_makanan',$params);
        return $this->db->insert_id();

    }
    
    /*
     * function to update stok_bahan_makanan
     */
    function update_stok_bahan_makanan($id,$params)
    {
        $this->db->where('id',$id);
        return $this->db->update('stok_bahan_makanan',$params);
    }
    
    /*
     * function to delete stok_bahan_makanan
     */
    function delete_stok_bahan_makanan($id)
    {
        return $this->db->delete('stok_bahan_makanan',array('id'=>$id));
    } 
    function _get_datatables_query()
    {
         
         $this->db->select('*');
         $this->db->from('stok_bahan_makanan');
         $this->db->join('kelompok_bahan_makanan','kelompok_bahan_makanan.id_kel=stok_bahan_makanan.kelompok_bahan', 'left');
 
        $i = 0;

   
        foreach ($this->column_search as $item) // loop column 
        {
            if($_POST['search']['value']) // if datatable send POST for search
            {
                 
                if($i===0) // first loop
                {
                    $this->db->group_start(); // open bracket. query Where with OR clause better with bracket. because maybe can combine with other WHERE with AND.
                    $this->db->like($item, $_POST['search']['value']);
                }
                else
                {
                    $this->db->or_like($item, $_POST['search']['value']);
                }
 
                if(count($this->column_search) - 1 == $i) //last loop
                    $this->db->group_end(); //close bracket
            }
            $i++;
        }
         
        if(isset($_POST['order'])) // here order processing
        {
            $this->db->order_by($this->column_order[$_POST['order']['0']['column']], $_POST['order']['0']['dir']);
        } 
        else if(isset($this->order))
        {
            $order = $this->order;
            $this->db->order_by(key($order), $order[key($order)]);
        }
    }
 
    function count_filtered()
    {
        $this->_get_datatables_query();
        $query = $this->db->get();
        return $query->num_rows();
    }
    function count_all()
    {
        $this->db->from($this->table);
        return $this->db->count_all_results();
    }
     function join_data() {
        $this->_get_datatables_query();
         if($_POST['length'] != -1)
         $this->db->limit($_POST['length'], $_POST['start']);
    
         return $this->db->get()->result();
   }
   public function graph()
    {
        $data = $this->db->query("SELECT * from stok_bahan_makanan");
        return $data->result();
    }

    }

